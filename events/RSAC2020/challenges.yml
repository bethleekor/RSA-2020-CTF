- name: Score Board
  description: 'Find the carefully hidden ''Score Board'' page. (Difficulty Level: 1)'
  max_attempts: 0
  value: 100
  category: Security through Obscurity
  type: standard
  state: visible
  flags:
    - type: static
      content: b3dc926bd51f79564b11ab66497983fca92b992a
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try to find a reference or clue behind the scenes. Or simply guess what
        URL the Score Board might have.
      cost: 10
- name: Email Leak
  description: >-
    Perform an unwanted information disclosure by accessing data cross-domain.
    (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: a7b7b4035a0789da833d81b53b7cd50c53580721
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try to find and attack an endpoint that responds with user information.
        SQL Injection is not the solution here.
      cost: 100
- name: Error Handling
  description: 'Provoke an error that is not very gracefully handled. (Difficulty Level: 1)'
  max_attempts: 0
  value: 100
  category: Security Misconfiguration
  type: standard
  state: visible
  flags:
    - type: static
      content: f3752e75ac2e0f596acfce590cf7a6deb76dbd6a
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try to submit bad input to forms. Alternatively tamper with URL paths or
        parameters.
      cost: 10
- name: Forged Review
  description: >-
    Post a product review as another user or edit any user's existing review.
    (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 672074b77dae80111a24b2ae8e887e8ae3edc9b6
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Observe the flow of product review posting and editing and see if you
        can exploit it.
      cost: 45
- name: Login Admin
  description: 'Log in with the administrator''s user account. (Difficulty Level: 2)'
  max_attempts: 0
  value: 250
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: fd918a56a74f376f8698c17ff0fcae682e56cb2e
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try different SQL Injection attack patterns depending whether you know
        the admin's email address or not.
      cost: 25
- name: Login Jim
  description: 'Log in with Jim''s user account. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: eeea6ee3d12880ba7c8c241a73be8bf3fd8b35ca
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try cracking Jim's password hash if you harvested it already.
        Alternatively, if you know Jim's email address, try SQL Injection.
      cost: 45
- name: Login Bender
  description: 'Log in with Bender''s user account. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: fc95e3dad0bbf7a089af5fc7da9f68d8345e9763
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        If you know Bender's email address, try SQL Injection. Bender's password
        hash might not help you very much.
      cost: 45
- name: Password Strength
  description: >-
    Log in with the administrator's user credentials without previously changing
    them or applying SQL Injection. (Difficulty Level: 2)
  max_attempts: 0
  value: 250
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: a983a06c515d34d4c15ab51e3fd630f24d4e6b27
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This one should be equally easy to a) brute force, b) crack the password
        hash or c) simply guess.
      cost: 25
- name: Five-Star Feedback
  description: 'Get rid of all 5-star customer feedback. (Difficulty Level: 2)'
  max_attempts: 0
  value: 250
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 10dbd4afd77da5bcb1826c9c4350f66ab572234a
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Once you found admin section of the application, this challenge is
        almost trivial.
      cost: 25
- name: Forged Feedback
  description: 'Post some feedback in another users name. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 2eb88ab5e95ffa4ae960057dc9e7a2bba3d7b51f
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You can solve this by tampering with the user interface or by
        intercepting the communication with the RESTful backend.
      cost: 45
- name: Redirects Tier 1
  description: >-
    Let us redirect you to a donation site that went out of business.
    (Difficulty Level: 1)
  max_attempts: 0
  value: 100
  category: Forgotten Content
  type: standard
  state: visible
  flags:
    - type: static
      content: ba2a26d3cdf12bd1661a8d4de6d1f86340ef2b09
      data: case_insensitive
  hints:
    - type: standard
      content: We might have failed to take this out of our code properly.
      cost: 10
- name: Redirects Tier 2
  description: 'Wherever you go, there you are. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: c79d8db800b2c32e8efcb8be314dfd7a6c8d5f90
      data: case_insensitive
  hints:
    - type: standard
      content: You have to find a way to beat the whitelist of allowed redirect URLs.
      cost: 70
- name: Basket Access Tier 1
  description: 'View another user''s shopping basket. (Difficulty Level: 2)'
  max_attempts: 0
  value: 250
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 4b054509d185c889221f23b7f62fe829446e0bf3
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Have an eye on the HTTP traffic while shopping. Alternatively try to
        find a client-side association of users to their basket.
      cost: 25
- name: Basket Access Tier 2
  description: >-
    Put an additional product into another user's shopping basket. (Difficulty
    Level: 3)
  max_attempts: 0
  value: 450
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 9680e3d8c2a42e18230e2b92190c1a576637e827
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Have an eye on the HTTP traffic while placing products in the shopping
        basket. Changing the quantity of products already in the basket doesn't
        count.
      cost: 45
- name: Payback Time
  description: 'Place an order that makes you rich. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Improper Input Validation
  type: standard
  state: visible
  flags:
    - type: static
      content: 18c21c38722b35ee791d85e50acb6d9fc5ebc988
      data: case_insensitive
  hints:
    - type: standard
      content: You literally need to make the shop owe you any amount of money.
      cost: 45
- name: Confidential Document
  description: 'Access a confidential document. (Difficulty Level: 1)'
  max_attempts: 0
  value: 100
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: a4487c7a03c9606b60434968b815b915133715ee
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Analyze and tamper with links in the application that deliver a file
        directly.
      cost: 10
- name: Forgotten Developer Backup
  description: 'Access a developer''s forgotten backup file. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: 901c7cf38ccf54ff24cce634817dc305d9f3de69
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You need to trick a security mechanism into thinking that the file you
        want has a valid file type.
      cost: 70
- name: Forgotten Sales Backup
  description: 'Access a salesman''s forgotten backup file. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Security Misconfiguration
  type: standard
  state: visible
  flags:
    - type: static
      content: 3fff1645266df7ffba51d524f6a3a86673abcb40
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You need to trick a security mechanism into thinking that the file you
        want has a valid file type.
      cost: 70
- name: Admin Section
  description: 'Access the administration section of the store. (Difficulty Level: 2)'
  max_attempts: 0
  value: 250
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 4db69872612770e2da3d80e8cf3465af239fbe35
      data: case_insensitive
  hints:
    - type: standard
      content: It is just slightly harder to find than the score board link.
      cost: 25
- name: Product Tampering
  description: >-
    Change the <code>href</code> of the link within the <a href="/#/search?q=Ps4
    $25 Gift Card">Ps4 $25 Gift Card</a> product description into
    <i>https://owasp.slack.com</i>. (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 65a176cc0285d273d7aeef29a0d9a6191e2f033d
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Look for one of the following: a) broken admin functionality, b) holes
        in RESTful API or c) possibility for SQL Injection.
      cost: 45
- name: Vulnerable Library
  description: >-
    <a href="/#/contact">Inform the shop</a> about a vulnerable library it is
    using. (Mention the exact library name and version in your comment)
    (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Vulnerable Components
  type: standard
  state: visible
  flags:
    - type: static
      content: 73c2da9d76f5816647b502bce378520b9cf3f47c
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Report one of two possible answers via the "Contact Us" form. Do not
        forget to submit the library's version as well.
      cost: 70
- name: Weird Crypto
  description: >-
    <a href="/#/contact">Inform the shop</a> about an algorithm or library it
    should definitely not use the way it does. (Difficulty Level: 2)
  max_attempts: 0
  value: 250
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: 2d3443934157c6c3fa206088cede60368c7af7b0
      data: case_insensitive
  hints:
    - type: standard
      content: Report one of four possible answers via the "Contact Us" form.
      cost: 25
- name: Easter Egg Tier 1
  description: >-
    Find the hidden <a href="http://en.wikipedia.org/wiki/Easter_egg_(media)"
    target="_blank">easter egg</a>. (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: 7dfe6ca585d8e71a524dcec992ed936353630fe8
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        If you solved one of the three file access challenges, you already know
        where to find the easter egg.
      cost: 70
- name: Easter Egg Tier 2
  description: >-
    Apply some advanced cryptanalysis to find <i>the real</i> easter egg.
    (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Security through Obscurity
  type: standard
  state: visible
  flags:
    - type: static
      content: 85ca893aed312868ae902ba006d81fc09ce69b22
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You might have to peel through several layers of tough-as-nails
        encryption for this challenge.
      cost: 70
- name: Forged Coupon
  description: >-
    Forge a coupon code that gives you a discount of at least 80%. (Difficulty
    Level: 6)
  max_attempts: 0
  value: 1350
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: 1163c3c2ee41c54e65865510db9ad1ccd61c2f25
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try either a) a knowledgable brute force attack or b) reverse
        engineering or c) some research in the cloud.
      cost: 135
- name: Upload Size
  description: 'Upload a file larger than 100 kB. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Improper Input Validation
  type: standard
  state: visible
  flags:
    - type: static
      content: dc7836d0a5fb40d5577363f86216c9c383a1b54c
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You can attach a small file to the "File Complaint" form. Investigate
        how this upload actually works.
      cost: 45
- name: Upload Type
  description: 'Upload a file that has no .pdf extension. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Improper Input Validation
  type: standard
  state: visible
  flags:
    - type: static
      content: c2c869cfee9b7148f375c13edefd1cb03b9d2af3
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You can attach a PDF file to the "File Complaint" form. Investigate how
        this upload actually works.
      cost: 45
- name: Arbitrary File Write
  description: >-
    Overwrite the <a href="/ftp/legal.md">Legal Information</a> file.
    (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Vulnerable Components
  type: standard
  state: visible
  flags:
    - type: static
      content: 0230a87a225584278dad332d41e3e873866870cf
      data: case_insensitive
  hints:
    - type: standard
      content: Look out for a tweet praising new functionality of the web shop.
      cost: 135
- name: Extra Language
  description: >-
    Retrieve the language file that never made it into production. (Difficulty
    Level: 5)
  max_attempts: 0
  value: 1000
  category: Forgotten Content
  type: standard
  state: visible
  flags:
    - type: static
      content: e0a0c0a3aa20a120d7d25323b3d74f4b95ef55ce
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Brute force is not the only option for this challenge, but a perfectly
        viable one.
      cost: 100
- name: CAPTCHA Bypass Tier 1
  description: >-
    Submit 10 or more customer feedbacks within 10 seconds. (Difficulty Level:
    3)
  max_attempts: 0
  value: 450
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: 2fb8f2facf5cb93d2526e206a23a81cb8bf811cf
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        After finding a CAPTCHA bypass, write a script that automates feedback
        submission. Or open many browser tabs and be really quick.
      cost: 45
- name: Zero Stars
  description: 'Give a devastating zero-star feedback to the store. (Difficulty Level: 1)'
  max_attempts: 0
  value: 100
  category: Improper Input Validation
  type: standard
  state: visible
  flags:
    - type: static
      content: 2443e721c594263db97ef0bf3115adbc87c82342
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Before you invest time bypassing the API, you might want to play around
        with the UI a bit.
      cost: 10
- name: Imaginary Challenge
  description: >-
    Solve challenge #999. Unfortunately, this challenge does not exist.
    (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: 09c7aedf8452dac6d7a20073cf7dffa80b3f851f
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You need to trick the hacking progress persistence feature into thinking
        you solved challenge #999.
      cost: 135
- name: Login Bjoern
  description: >-
    Log in with Bjoern's Gmail account <i>without</i> previously changing his
    password, applying SQL Injection, or hacking his Google account. (Difficulty
    Level: 4)
  max_attempts: 0
  value: 700
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: dfd40d0606ffa82876b9c10daec47b71856749ac
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The security flaw behind this challenge is 100% Juice Shop's fault and
        0% Google's.
      cost: 70
- name: Login CISO
  description: >-
    Exploit OAuth 2.0 to log in with the Chief Information Security Officer's
    user account. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: b74b5da6ef4c6886c3cc05357b191271f42faa41
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Don't try to beat Google's OAuth 2.0 service. Rather investigate
        implementation flaws on Juice Shop's end.
      cost: 100
- name: Login Support Team
  description: >-
    Log in with the support team's original user credentials without applying
    SQL Injection or any other bypass. (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Security Misconfiguration
  type: standard
  state: visible
  flags:
    - type: static
      content: 206903462360c55423778435260fba47993b3fb2
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The underlying flaw of this challenge is a lot more human error than
        technical weakness.
      cost: 135
- name: Login MC SafeSearch
  description: >-
    Log in with MC SafeSearch's original user credentials without applying SQL
    Injection or any other bypass. (Difficulty Level: 2)
  max_attempts: 0
  value: 250
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: 4259d0ef41ddb9cebe7d8b9132a25267fe144a7a
      data: case_insensitive
  hints:
    - type: standard
      content: You should listen to MC's hit song "Protect Ya Passwordz".
      cost: 25
- name: Premium Paywall
  description: >-
    <i class="far fa-gem"></i><i class="far fa-gem"></i><i class="far
    fa-gem"></i><i class="far fa-gem"></i><i class="far
    fa-gem"></i><!--IvLuRfBJYlmStf9XfL6ckJFngyd9LfV1JaaN/KRTPQPidTuJ7FR+D/nkWJUF+0xUF07CeCeqYfxq+OJVVa0gNbqgYkUNvn//UbE7e95C+6e+7GtdpqJ8mqm4WcPvUGIUxmGLTTAC2+G9UuFCD1DUjg==-->
    <a
    href="/redirect?to=https://blockchain.info/address/1AbKfgvw9psQ41NbLi8kufDQTezwG8DRZm"
    target="_blank"><i class="fab fa-btc fa-sm"></i> Unlock Premium
    Challenge</a> to access exclusive content. (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: c171f65b690d7430b832848ff604e30f4b9a510c
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You do not have to pay anything to unlock this challenge! Nonetheless,
        donations are very much appreciated.
      cost: 135
- name: Reset Jim's Password
  description: >-
    Reset Jim's password via the <a href="/#/forgot-password">Forgot
    Password</a> mechanism with <i>the original answer</i> to his security
    question. (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: d9def4efb9c7d6e4f0e453c3e0b5892103d14065
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        It's hard for celebrities to pick a security question from a hard-coded
        list where the answer is not publicly exposed.
      cost: 45
- name: Reset Bender's Password
  description: >-
    Reset Bender's password via the <a href="/#/forgot-password">Forgot
    Password</a> mechanism with <i>the original answer</i> to his security
    question. (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: 32ad127140220c05c95f83d4d9f7355045eb8633
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Not as trivial as Jim's but still not too difficult with some "Futurama"
        background knowledge.
      cost: 70
- name: Reset Morty's Password
  description: >-
    Reset Morty's password via the <a href="/#/forgot-password">Forgot
    Password</a> mechanism with <i>his obfuscated answer</i> to his security
    question. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Security Misconfiguration
  type: standard
  state: visible
  flags:
    - type: static
      content: 540dce099964d35ceb11b67a8305f549f79326c7
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Find a way to bypass the rate limiting and brute force the obfuscated
        answer to Morty's security question.
      cost: 100
- name: Reset Bjoern's Password Tier 2
  description: >-
    Reset the password of Bjoern's internal account via the <a
    href="/#/forgot-password">Forgot Password</a> mechanism with <i>the original
    answer</i> to his security question. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: 0056eca7e7b92fdc3189e9fdeb1e2246b3b74bed
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Nothing a little bit of Facebook stalking couldn't reveal. Might involve
        a historical twist.
      cost: 100
- name: NoSQL Injection Tier 1
  description: >-
    Let the server sleep for some time. (It has done more than enough hard work
    for you) (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: 8866a0b8c31f7630e1a8d4469144ca02bd9d5d1d
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This challenge is essentially a stripped-down Denial of Service (DoS)
        attack.
      cost: 70
- name: NoSQL Injection Tier 2
  description: 'Update multiple product reviews at the same time. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: 9af31cbbd32d25bc026551358cd7c44a2f24d698
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Take a close look on how the equivalent of UPDATE-statements in MongoDB
        work.
      cost: 70
- name: NoSQL Injection Tier 3
  description: 'All your orders are belong to us! (Difficulty Level: 5)'
  max_attempts: 0
  value: 1000
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: 7acdc1bc45439a6c9a30f146b69686eea1b5dfee
      data: case_insensitive
  hints:
    - type: standard
      content: Take a close look on how the $where query operator works in MongoDB.
      cost: 100
- name: Retrieve Blueprint
  description: >-
    Deprive the shop of earnings by downloading the blueprint for one of its
    products. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Forgotten Content
  type: standard
  state: visible
  flags:
    - type: static
      content: d237cfe93180d04675b7b25f7c384f5e377aa5a7
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The product you might want to give a closer look is the OWASP Juice Shop
        Logo (3D-printed).
      cost: 100
- name: Typosquatting Tier 1
  description: >-
    <a href="/#/contact">Inform the shop</a> about a <i>typosquatting</i> trick
    it has become victim of. (Mention the exact name of the culprit) (Difficulty
    Level: 4)
  max_attempts: 0
  value: 700
  category: Vulnerable Components
  type: standard
  state: visible
  flags:
    - type: static
      content: da97d1d26fd3d9fc87ba1e69b62be8c952e4f02d
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This challenge has nothing to do with URLs or domains. Investigate the
        forgotten developer's backup file instead.
      cost: 70
- name: Typosquatting Tier 2
  description: >-
    <a href="/#/contact">Inform the shop</a> about a more sneaky instance of
    <i>typosquatting</i> it fell for. (Mention the exact name of the culprit)
    (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Vulnerable Components
  type: standard
  state: visible
  flags:
    - type: static
      content: f6e6d4b158174fec7532ac8778e25b494c7783b5
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This challenge has nothing to do with URLs or domains. There is no
        conveniently misplaced file helping you with this one. Or is there?
      cost: 100
- name: JWT Issues Tier 1
  description: >-
    Forge an essentially unsigned JWT token that impersonates the (non-existing)
    user <i>jwtn3d@juice-sh.op</i>. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Vulnerable Components
  type: standard
  state: visible
  flags:
    - type: static
      content: 11f274220c4fab91e60568a62d57618847404e26
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This challenge exploits a weird option that is supported when signing
        tokens with JWT.
      cost: 100
- name: JWT Issues Tier 2
  description: >-
    Forge an almost properly RSA-signed JWT token that impersonates the
    (non-existing) user <i>rsa_lord@juice-sh.op</i>. (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Vulnerable Components
  type: standard
  state: visible
  flags:
    - type: static
      content: 642c81a5ad019f98066cb100cde9d70f6cb2299a
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This challenge is explicitly not about acquiring the RSA private key
        used for JWT signing.
      cost: 135
- name: Misplaced Signature File
  description: >-
    Access a misplaced <a href="https://github.com/Neo23x0/sigma">SIEM
    signature</a> file. (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: 5718cc66d12e83e0db21d7e6bcd60f065a06338b
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You need to trick a security mechanism into thinking that the file you
        want has a valid file type.
      cost: 70
- name: Deprecated Interface
  description: >-
    Use a deprecated B2B interface that was not properly shut down. (Difficulty
    Level: 2)
  max_attempts: 0
  value: 250
  category: Forgotten Content
  type: standard
  state: visible
  flags:
    - type: static
      content: e7f4dd11f69cbab148ee9727446e9babfb363d32
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The developers who disabled the interface think they could go invisible
        by just closing their eyes.
      cost: 25
- name: XXE Tier 1
  description: >-
    Retrieve the content of <code>C:\Windows\system.ini</code> or
    <code>/etc/passwd</code> from the server. <em>(This challenge is <strong>not
    available</strong> on Docker!)</em> (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: XXE
  type: standard
  state: visible
  flags:
    - type: static
      content: 52bb12ed38fffe7bf8276a872fdfdc9271503ea2
      data: case_insensitive
  hints:
    - type: standard
      content: The leverage point for this challenge is the deprecated B2B interface.
      cost: 45
- name: XXE Tier 2
  description: >-
    Give the server something to chew on for quite a while. <em>(This challenge
    is <strong>not available</strong> on Docker!)</em> (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: XXE
  type: standard
  state: visible
  flags:
    - type: static
      content: 14d635869ddf13b0fa5d9363510c304783f9dc73
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        It is not as easy as sending a large amount of data directly to the
        deprecated B2B interface.
      cost: 100
- name: RCE Tier 1
  description: >-
    Perform a Remote Code Execution that would keep a less hardened application
    busy <em>forever</em>. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Insecure Deserialization
  type: standard
  state: visible
  flags:
    - type: static
      content: 5acc10c3695295ba7411a2d7d986adfc26f547e0
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The feature you need to exploit for this challenge is not directly
        advertised anywhere.
      cost: 100
- name: RCE Tier 2
  description: >-
    Perform a Remote Code Execution that occupies the server for a while without
    using infinite loops. (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Insecure Deserialization
  type: standard
  state: visible
  flags:
    - type: static
      content: 9cd140fee0d065eaa3457e0021509d1162d5f697
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Your attack payload must not trigger the protection against too many
        iterations.
      cost: 135
- name: Blockchain Tier 1
  description: >-
    Learn about the Token Sale before its official announcement. (Difficulty
    Level: 5)
  max_attempts: 0
  value: 1000
  category: Security through Obscurity
  type: standard
  state: visible
  flags:
    - type: static
      content: f282158451a83042374762dcd76be9285f9ff1e0
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The developers truly believe in "Security through Obscurity" over actual
        access restrictions.
      cost: 100
- name: Security Policy
  description: 'Behave like any "white-hat" should. (Difficulty Level: 2)'
  max_attempts: 0
  value: 250
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: c4af7779c030ec360b4207ad083e60a221cb0e98
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Undoubtably you want to read our security policy before conducting any
        research on our application.
      cost: 25
- name: Steganography Tier 1
  description: >-
    <a href="/#/contact">Rat out</a> a notorious character hiding in plain sight
    in the shop. (Mention the exact name of the character) (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Security through Obscurity
  type: standard
  state: visible
  flags:
    - type: static
      content: aef542695d4c4a2867b0de102ab497beb9f65cf0
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        No matter how good your eyes are, you will need tool assistance for this
        challenge.
      cost: 70
- name: Supply Chain Attack
  description: >-
    <a href="/#/contact">Inform the development team</a> about a danger to some
    of <em>their</em> credentials. (Send them the URL of the <em>original
    report</em> or the CVE of this vulnerability) (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: 04c668f96b9ef17d3206ccb43b08e597c50088b5
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        This vulnerability will not affect any customer of the shop. It is aimed
        exclusively at its developers.
      cost: 100
- name: Christmas Special
  description: 'Order the Christmas special offer of 2014. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: c916132a61cd4b2b885224750d370484d3904834
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Find out how the application handles unavailable products and try to
        find a loophole.
      cost: 70
- name: User Credentials
  description: >-
    Retrieve a list of all user credentials via SQL Injection (Difficulty Level:
    4)
  max_attempts: 0
  value: 700
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: b0050e5e352a0ec0513545c3e4d44d9d00469961
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Craft a UNION SELECT attack string against an endpoint that offers an
        unnecessary way to filter data.
      cost: 70
- name: Admin Registration
  description: 'Get registered as admin user. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Improper Input Validation
  type: standard
  state: visible
  flags:
    - type: static
      content: 6b564b1973fd9c7a0910783c30feaa017275c5d0
      data: case_insensitive
  hints:
    - type: standard
      content: Assign the unassignable.
      cost: 45
- name: XSS Tier 0
  description: >-
    Perform a <i>reflected</i> XSS attack with <code>&lt;iframe
    src="javascript:alert(`xss`)"&gt;</code>. (Difficulty Level: 1)
  max_attempts: 0
  value: 100
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: 14b55586c8f528fdf7d0690725b6c46573628a06
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Look for an input field where its content appears in the response HTML
        when its form is submitted.
      cost: 10
- name: XSS Tier 1
  description: >-
    Perform a <i>DOM</i> XSS attack with <code>&lt;iframe
    src="javascript:alert(`xss`)"&gt;</code>. (Difficulty Level: 1)
  max_attempts: 0
  value: 100
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: cde4e7ab8e613e531988d254f13bc4a59ef6191f
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Look for an input field where its content appears in the HTML when its
        form is submitted.
      cost: 10
- name: XSS Tier 2
  description: >-
    Perform a <i>persisted</i> XSS attack with <code>&lt;iframe
    src="javascript:alert(`xss`)"&gt;</code> bypassing a <i>client-side</i>
    security mechanism. (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: bd5637b87d099bb913b59ee6f5957fe231c03936
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Only some input fields validate their input. Even less of these are
        persisted in a way where their content is shown on another screen.
      cost: 45
- name: XSS Tier 3
  description: >-
    Perform a <i>persisted</i> XSS attack with <code>&lt;iframe
    src="javascript:alert(`xss`)"&gt;</code> without using the frontend
    application at all. (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: 01825adaf35f0556af0c3dc8846153179a80e9b5
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You need to work with the server-side API directly. Try different HTTP
        verbs on different entities exposed through the API.
      cost: 45
- name: XSS Tier 4
  description: >-
    Perform a <i>persisted</i> XSS attack with <code>&lt;iframe
    src="javascript:alert(`xss`)"&gt;</code> bypassing a <i>server-side</i>
    security mechanism. (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: a487ecaa8920057c64531db211058e51b4f4f4d8
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The "Comment" field in the "Contact Us" screen is where you want to put
        your focus on.
      cost: 70
- name: Change Bender's Password
  description: >-
    Change Bender's password into <i>slurmCl4ssic</i> without using SQL
    Injection or Forgot Password. (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: 3784e26b24f26c544449ec030db8c047df82347c
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        In previous releases this challenge was wrongly accused of being based
        on CSRF.
      cost: 100
- name: XSS Tier 5
  description: >-
    Perform a <i>persisted</i> XSS attack with <code>&lt;iframe
    src="javascript:alert(`xss`)"&gt;</code> through an HTTP header. (Difficulty
    Level: 4)
  max_attempts: 0
  value: 700
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: e6d675790f20e5c800c0f79aef1600e14e5c90c4
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Finding a piece of displayed information that could originate from an
        HTTP header is the part of this challenge.
      cost: 70
- name: Multiple Likes
  description: 'Like any review at least three times as the same user. (Difficulty Level: 6)'
  max_attempts: 0
  value: 1350
  category: Race Condition
  type: standard
  state: visible
  flags:
    - type: static
      content: 5b36c22bcbc58f17897bc70f6f2807a0b8eda0a0
      data: case_insensitive
  hints:
    - type: standard
      content: Punctuality is the politeness of kings.
      cost: 135
- name: SSTi
  description: >-
    Infect the server with juicy malware by abusing arbitrary command execution.
    <em>(This challenge is <strong>not available</strong> on Docker!)</em>
    (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: 398b009c2c38a8a5a1b9ab2df006049ecd1f9149
      data: case_insensitive
  hints:
    - type: standard
      content: The search for a personal identity is the life of a man.
      cost: 135
- name: SSRF
  description: 'Request a hidden resource on server through server. (Difficulty Level: 6)'
  max_attempts: 0
  value: 1350
  category: Broken Access Control
  type: standard
  state: visible
  flags:
    - type: static
      content: 28ef36c4289006be6b6a8176aa43cc51edc94ab9
      data: case_insensitive
  hints:
    - type: standard
      content: Reverse the Bad and it gets Good again.
      cost: 135
- name: Login Amy
  description: >-
    Log in with Amy's original user credentials. (This could take 93.83 billion
    trillion trillion centuries to brute force, but luckily she did not read the
    "One Important Final Note") (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: 7c22765bca6a63751f7e47d8aa04f3659e9c7865
      data: case_insensitive
  hints:
    - type: standard
      content: This challenge will make you go after a needle in a haystack.
      cost: 45
- name: XSS Tier 1.5
  description: >-
    Perform an XSS attack with
    <code>&lt;script&gt;alert(`xss`)&lt;/script&gt;</code> on a legacy page
    within the application. (Difficulty Level: 2)
  max_attempts: 0
  value: 250
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: 199769f47db0698bcb22b7d4a287670455fb94b9
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        What is even "better" than homegrown validation based on a RegEx?
        Homegrown sanitization based on a RegEx!
      cost: 25
- name: Reset Bjoern's Password Tier 1
  description: >-
    Reset the password of Bjoern's OWASP account via the <a
    href="/#/forgot-password">Forgot Password</a> mechanism with <i>the original
    answer</i> to his security question. (Difficulty Level: 3)
  max_attempts: 0
  value: 450
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: e775b282a180f00441de654260412c6307482ae8
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        He might have spoilered it on at least one occasion where a camera was
        running. Maybe elsewhere as well.
      cost: 45
- name: Access Log
  description: 'Gain access to any access log file of the server. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: be1f750589f499961743147d6c1f2e645e97268e
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Who would want a server access log to be accessible through a web
        application?
      cost: 70
- name: DLP Failure Tier 1
  description: >-
    Identify an unsafe product that was removed from the shop and <a
    href="/#/contact">inform the shop</a> which ingredients are dangerous.
    (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: 54872d0c0b18a4563090f2e58610da67e065d273
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Your own SQLi and someone else's Ctrl-V will be your accomplices in this
        challenge!
      cost: 70
- name: DLP Failure Tier 2
  description: >-
    Dumpster dive the Internet for a leaked password and log in to the original
    user account it belongs to. (Creating a new account with the same password
    does not qualify as a solution.) (Difficulty Level: 5)
  max_attempts: 0
  value: 1000
  category: Sensitive Data Exposure
  type: standard
  state: visible
  flags:
    - type: static
      content: c62766ba8849e2a057a7668a0846dd7f5557cf1a
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Once you have it, a technique called "Password Spraying" might prove
        useful.
      cost: 100
- name: XSS Tier 6
  description: >-
    Embed an XSS payload
    <code>&lt;/script&gt;&lt;script&gt;alert(`xss`)&lt;/script&gt;</code> into
    one of our marketing collaterals. (Difficulty Level: 6)
  max_attempts: 0
  value: 1350
  category: XSS
  type: standard
  state: visible
  flags:
    - type: static
      content: 74e4df50fb0d36ec98d28a637c33defec782fdf6
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You have to reuse the vulnerability behind one other 6-star challenge to
        be able to solve this one.
      cost: 135
- name: Lost in Recycling
  description: >-
    Find an old <a href="/#/recycle">Recycle request</a> and <a
    href="/#/contact">inform the shop</a> about its unusual address. (Mention
    the entire delivery or pickup address in your comment) (Difficulty Level: 4)
  max_attempts: 0
  value: 700
  category: Injection
  type: standard
  state: visible
  flags:
    - type: static
      content: 01a89b42fd941e1132617a7f578acc4f65c56336
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Although we really like environmentalists, please do not spam us with
        too many requests at a time. We are not that keen on doing another DB
        cleanup any time soon!
      cost: 70
- name: Two Factor Authentication
  description: >-
    Solve the 2FA challenge for user "wurstbrot". (Disabling, bypassing or
    overwriting his 2FA settings does not count as a solution) (Difficulty
    Level: 5)
  max_attempts: 0
  value: 1000
  category: Broken Authentication
  type: standard
  state: visible
  flags:
    - type: static
      content: e40664dfa6ef2f8042fa1df1a4c4e880f2262771
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        The 2FA implementation requires to store a secret for every user. You
        will need to find a way to access this secret in order to solve this
        challenge.
      cost: 100
- name: Expired Coupon
  description: 'Successfully redeem an expired campaign coupon code. (Difficulty Level: 4)'
  max_attempts: 0
  value: 700
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: 96e2450450c67f9ea4c19bcd000ef7f8a9e8b537
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        Try to identify past special event or holiday campaigns of the shop
        first.
      cost: 70
- name: Privacy Policy Tier 1
  description: 'Read our privacy policy. (Difficulty Level: 1)'
  max_attempts: 0
  value: 100
  category: Roll your own Security
  type: standard
  state: visible
  flags:
    - type: static
      content: 77f83eb648a4508a7fb733488010e6e60aaf2904
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        We won't even ask you to confirm that you did. Just read it. Please.
        Pretty please.
      cost: 10
- name: Privacy Policy Tier 2
  description: 'Prove that you actually read our privacy policy. (Difficulty Level: 3)'
  max_attempts: 0
  value: 450
  category: Security through Obscurity
  type: standard
  state: visible
  flags:
    - type: static
      content: e654e0f5ffc6a30f221a8be0c94708477202ca31
      data: case_insensitive
  hints:
    - type: standard
      content: Now we do ask you to confirm that you read it carefully.
      cost: 45
- name: Repetitive Registration
  description: 'Follow the DRY principle while registering a user. (Difficulty Level: 1)'
  max_attempts: 0
  value: 100
  category: Improper Input Validation
  type: standard
  state: visible
  flags:
    - type: static
      content: f54340f5f9d75882bf434d86f4fec5b084892d16
      data: case_insensitive
  hints:
    - type: standard
      content: >-
        You can solve this by cleverly interacting with the UI or bypassing it
        altogether.
      cost: 10
